import { Subscription } from 'rxjs';
export class SubscriptionHelper {
    constructor() {
        this.subscriptions = [];
    }
    static registerCase(comparator, unsubscriber) {
        this.cases.set(comparator, unsubscriber);
    }
    set next(subscription) {
        this.subscriptions.push(subscription);
    }
    get last() {
        return this.subscriptions[this.subscriptions.length - 1];
    }
    unsubscribeAll() {
        this.subscriptions.forEach(item => {
            for (let entry of SubscriptionHelper.cases.entries()) {
                if (entry[0](item)) {
                    entry[1](item);
                    break;
                }
            }
        });
        this.subscriptions = [];
    }
}
SubscriptionHelper.cases = new Map();
SubscriptionHelper.registerCase(v => v instanceof Subscription, v => v.unsubscribe());
SubscriptionHelper.registerCase(v => v instanceof SubscriptionHelper, v => v.unsubscribeAll());
SubscriptionHelper.registerCase(v => typeof v === 'function', v => v());
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Vic2NyaXB0aW9uLmhlbHBlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUvc3JjL2xpYi9zdWJzY3JpcHRpb24uaGVscGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFJcEMsTUFBTSxPQUFPLGtCQUFrQjtJQUEvQjtRQU9ZLGtCQUFhLEdBQW9CLEVBQUUsQ0FBQztJQXNCaEQsQ0FBQztJQTFCVSxNQUFNLENBQUMsWUFBWSxDQUFJLFVBQTRCLEVBQUUsWUFBK0I7UUFDdkYsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFJRCxJQUFXLElBQUksQ0FBQyxZQUFzQjtRQUNsQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBRUQsSUFBVyxJQUFJO1FBQ1gsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzdELENBQUM7SUFFTSxjQUFjO1FBQ2pCLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQzlCLEtBQUssSUFBSSxLQUFLLElBQUksa0JBQWtCLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxFQUFFO2dCQUNsRCxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRTtvQkFDaEIsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO29CQUNmLE1BQU07aUJBQ1Q7YUFDSjtRQUNMLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLGFBQWEsR0FBRyxFQUFFLENBQUM7SUFDNUIsQ0FBQzs7QUEzQmMsd0JBQUssR0FBRyxJQUFJLEdBQUcsRUFBZ0MsQ0FBQTtBQThCbEUsa0JBQWtCLENBQUMsWUFBWSxDQUFlLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxZQUFZLFlBQVksRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO0FBQ3BHLGtCQUFrQixDQUFDLFlBQVksQ0FBcUIsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLFlBQVksa0JBQWtCLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQztBQUNuSCxrQkFBa0IsQ0FBQyxZQUFZLENBQWEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBSyxVQUFVLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XHJcblxyXG5leHBvcnQgdHlwZSBMaXN0ZW5lciA9IFN1YnNjcmlwdGlvbiB8ICgoKSA9PiB2b2lkKSB8IFN1YnNjcmlwdGlvbkhlbHBlcjtcclxuXHJcbmV4cG9ydCBjbGFzcyBTdWJzY3JpcHRpb25IZWxwZXIge1xyXG4gICAgcHJpdmF0ZSBzdGF0aWMgY2FzZXMgPSBuZXcgTWFwPChpdGVtKSA9PiBhbnksIChpdGVtKSA9PiBhbnk+KClcclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlZ2lzdGVyQ2FzZTxUPihjb21wYXJhdG9yOiAoaXRlbTogVCkgPT4gYW55LCB1bnN1YnNjcmliZXI6IChpdGVtOiBUKSA9PiB2b2lkKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5jYXNlcy5zZXQoY29tcGFyYXRvciwgdW5zdWJzY3JpYmVyKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHN1YnNjcmlwdGlvbnM6IEFycmF5PExpc3RlbmVyPiA9IFtdO1xyXG5cclxuICAgIHB1YmxpYyBzZXQgbmV4dChzdWJzY3JpcHRpb246IExpc3RlbmVyKSB7XHJcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLnB1c2goc3Vic2NyaXB0aW9uKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0IGxhc3QoKTogTGlzdGVuZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnN1YnNjcmlwdGlvbnNbdGhpcy5zdWJzY3JpcHRpb25zLmxlbmd0aCAtIDFdO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB1bnN1YnNjcmliZUFsbCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMuZm9yRWFjaChpdGVtID0+IHtcclxuICAgICAgICAgICAgZm9yIChsZXQgZW50cnkgb2YgU3Vic2NyaXB0aW9uSGVscGVyLmNhc2VzLmVudHJpZXMoKSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGVudHJ5WzBdKGl0ZW0pKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZW50cnlbMV0oaXRlbSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zID0gW107XHJcbiAgICB9XHJcbn1cclxuXHJcblN1YnNjcmlwdGlvbkhlbHBlci5yZWdpc3RlckNhc2U8U3Vic2NyaXB0aW9uPih2ID0+IHYgaW5zdGFuY2VvZiBTdWJzY3JpcHRpb24sIHYgPT4gdi51bnN1YnNjcmliZSgpKTtcclxuU3Vic2NyaXB0aW9uSGVscGVyLnJlZ2lzdGVyQ2FzZTxTdWJzY3JpcHRpb25IZWxwZXI+KHYgPT4gdiBpbnN0YW5jZW9mIFN1YnNjcmlwdGlvbkhlbHBlciwgdiA9PiB2LnVuc3Vic2NyaWJlQWxsKCkpO1xyXG5TdWJzY3JpcHRpb25IZWxwZXIucmVnaXN0ZXJDYXNlPCgpID0+IHZvaWQ+KHYgPT4gdHlwZW9mIHYgPT09ICdmdW5jdGlvbicsIHYgPT4gdigpKVxyXG4iXX0=