{"version":3,"file":"high-lab-dynamic-form.mjs","sources":["../../../projects/dynamic-form/src/lib/helpers/random/random.helper.ts","../../../projects/dynamic-form/src/lib/helpers/common/common.helper.ts","../../../projects/dynamic-form/src/lib/form-controls/extended-form-group.ts","../../../projects/dynamic-form/src/lib/form-controls/extended-form-array.ts","../../../projects/dynamic-form/src/lib/form-controls/extended-form-control.ts","../../../projects/dynamic-form/src/lib/base.field.ts","../../../projects/dynamic-form/src/lib/base.component.ts","../../../projects/dynamic-form/src/lib/common.ts","../../../projects/dynamic-form/src/lib/dynamic-from-content.directive.ts","../../../projects/dynamic-form/src/lib/injectors.ts","../../../projects/dynamic-form/src/lib/dynamic-field.directive.ts","../../../projects/dynamic-form/src/lib/dynamic-form.component.ts","../../../projects/dynamic-form/src/lib/dynamic-form.component.html","../../../projects/dynamic-form/src/lib/dynamic-form.module.ts","../../../projects/dynamic-form/src/public-api.ts","../../../projects/dynamic-form/src/high-lab-dynamic-form.ts"],"sourcesContent":["export class RandomHelper {\r\n  /** use for large set, unique by 10 000 000 */\r\n  public static get StrId(): string {\r\n    return Math.random().toString(36).substring(2);\r\n  }\r\n\r\n  /** use only for small set, unique by 10 000 */\r\n  public static get NumId(): number {\r\n    return 1 + Math.random() * 0x10000000 | 0;\r\n  }\r\n}\r\n","import { ExtendedControls, ExtendedFormArray, ExtendedFormControl, ExtendedFormGroup } from '../../form-controls';\r\nimport { ErrorObject } from '../../interfaces';\r\n\r\nexport class CommonHelper {\r\n  public static instantError(control: ExtendedControls, asString: false): ErrorObject | null;\r\n  public static instantError(control: ExtendedControls, asString: true): string | null\r\n  public static instantError(control: ExtendedControls, asString: boolean = true): string | null | ErrorObject {\r\n    let firstKey = '';\r\n    const errors = control.errors;\r\n\r\n    if (!errors) {\r\n      return null;\r\n    }\r\n\r\n    for (const key in errors) {\r\n      if (errors.hasOwnProperty(key)) {\r\n        firstKey = key;\r\n        break;\r\n      }\r\n    }\r\n\r\n    const customError = control.fieldConfig.validationMessages && control.fieldConfig.validationMessages[firstKey];\r\n    const root = control.root as ExtendedFormGroup;\r\n    const rootValidationMessage = root.defaultValidationMessages && root.defaultValidationMessages[firstKey]\r\n    const error = customError || rootValidationMessage || firstKey;\r\n\r\n    let errorString = error as string;\r\n\r\n    if (typeof error === 'function') {\r\n      errorString = error(errors[firstKey]);\r\n    }\r\n\r\n    if (!asString) {\r\n      return { key: firstKey, message: errorString, params: errors[firstKey] }\r\n    }\r\n\r\n    return errorString;\r\n  }\r\n\r\n  public static getFirstInvalidControl(control: ExtendedFormGroup | ExtendedFormArray): ExtendedFormControl | null {\r\n    for (const item of control.childrenControls) {\r\n      if (!item.invalid) {\r\n        continue;\r\n      }\r\n\r\n      if (item instanceof ExtendedFormControl) {\r\n        return item;\r\n      } else {\r\n        return this.getFirstInvalidControl(item);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter, map, startWith } from 'rxjs/operators';\r\nimport { GroupField } from '../base.field';\r\nimport { ValidationMessages } from '../dynamic-form.config';\r\nimport { CommonHelper, RandomHelper } from '../helpers';\r\nimport { ErrorObject } from '../interfaces';\r\nimport { ExtendedControls } from './index';\r\n\r\n\r\nexport class ExtendedFormGroup extends FormGroup {\r\n  public readonly supposeControls = new Map<string, Subject<ExtendedControls>>();\r\n  public readonly id = RandomHelper.NumId;\r\n  public pathFromRoot!: string;\r\n  public defaultValidationMessages: ValidationMessages = {};\r\n  public controls!: { [key: string]: ExtendedControls };\r\n  public fieldConfig!: GroupField;\r\n  public lastPatchedValue: { [key: string]: any } | undefined;\r\n  public defaultValuePatched = false;\r\n  public htmlInstance!: HTMLElement;\r\n  public childrenControls: Array<ExtendedControls> = [];\r\n\r\n  public error: Observable<string | null> = this.statusChanges.pipe(\r\n    startWith(false),\r\n    map(() => CommonHelper.instantError(this, true))\r\n  );\r\n\r\n  public errorObject: Observable<ErrorObject | null> = this.statusChanges.pipe(\r\n    startWith(false),\r\n    map(() => CommonHelper.instantError(this, false))\r\n  );\r\n\r\n  public get canShowError(): boolean {\r\n    return this.invalid && (this.touched || this.dirty);\r\n  }\r\n\r\n  public get isChangedByUser(): boolean {\r\n    if (this.fieldConfig && typeof this.fieldConfig.checkChanges === 'function') {\r\n      return this.fieldConfig.checkChanges(this.value, this.defaultValuePatched);\r\n    }\r\n\r\n    for (const control of Object.values(this.controls)) {\r\n      if (control.isChangedByUser) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public get(path: Array<string | number> | string): ExtendedControls {\r\n    return super.get(path) as any;\r\n  }\r\n\r\n  public patchValue(value: { [key: string]: any }, options: { onlySelf?: boolean, emitEvent?: boolean, useAsDefault?: boolean } = {}): void {\r\n    if (value == null /* both `null` and `undefined` */) {\r\n      return;\r\n    }\r\n\r\n    if (options.useAsDefault) {\r\n      this.defaultValuePatched = true;\r\n    }\r\n\r\n    Object.keys(value).forEach(name => {\r\n      if (this.controls[name]) {\r\n        this.controls[name].patchValue(value[name], { ...options, onlySelf: true });\r\n      }\r\n    });\r\n\r\n    this.updateValueAndValidity(options);\r\n\r\n    this.lastPatchedValue = value;\r\n  }\r\n\r\n  public validate(scrollToError: boolean = true): boolean {\r\n    this.markAllAsTouched();\r\n    this.updateValueAndValidity({ onlySelf: true });\r\n\r\n    if (scrollToError && this.invalid) {\r\n      this.scrollToError();\r\n    }\r\n\r\n    return this.valid;\r\n  }\r\n\r\n  public resetDefaultValue(): void {\r\n    this.defaultValuePatched = false;\r\n    Object.values(this.controls).forEach(control => control.resetDefaultValue());\r\n  }\r\n\r\n  public resetToDefaultValue(options: { onlySelf?: boolean, emitEvent?: boolean } = {}): void {\r\n    Object.values(this.controls).forEach(control => control.resetToDefaultValue({ ...options, onlySelf: true }));\r\n    this.updateValueAndValidity();\r\n  }\r\n\r\n  public scrollToError(): void {\r\n    const invalidControl = CommonHelper.getFirstInvalidControl(this);\r\n    if (invalidControl) {\r\n      invalidControl.htmlInstance.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }\r\n\r\n  public updateChildrenControls(): void {\r\n    this.childrenControls = Object.values(this.controls);\r\n\r\n    this.childrenControls.sort((a: any, b: any) => {\r\n      if (a.fieldConfig.internalOrder < b.fieldConfig.internalOrder) {\r\n        return -1;\r\n      } else if (a.fieldConfig.internalOrder > b.fieldConfig.internalOrder) {\r\n        return 1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  public getControl(path: string[]): Observable<any> {\r\n    const pathStr = this.pathFromRoot + path.join('.');\r\n    const root = this.root as ExtendedFormGroup;\r\n\r\n    if (!root.supposeControls.has(pathStr)) {\r\n      root.supposeControls.set(pathStr, new Subject());\r\n    }\r\n\r\n    const subject = root.supposeControls.get(pathStr) as Subject<any>;\r\n    return subject.pipe(\r\n      filter(v => !!v)\r\n    );\r\n  }\r\n\r\n  public getRawValue(params = { ignoredFields: false }): any {\r\n    return this.childrenControls.reduce((acc, control) => {\r\n      if (!control.fieldConfig.ignore || params.ignoredFields) {\r\n        (acc as any)[control.fieldConfig.key] = (control as any).getRawValue(params);\r\n      }\r\n      return acc;\r\n    }, {}) as any;\r\n  }\r\n}","import { AbstractControlOptions, AsyncValidatorFn, FormArray, ValidatorFn } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { ArrayField } from '../base.field';\r\nimport { CommonHelper, RandomHelper } from '../helpers';\r\nimport { ErrorObject } from '../interfaces';\r\n\r\nimport { ExtendedControls, ExtendedFormControl, ExtendedFormGroup } from './index';\r\n\r\nexport class ExtendedFormArray extends FormArray {\r\n  public readonly id = RandomHelper.NumId;\r\n\r\n  private lastPatchedValue: any;\r\n\r\n  public pathFromRoot!: string;\r\n  public override controls!: Array<ExtendedFormGroup>;\r\n  public fieldConfig!: ArrayField;\r\n  public canAddRow: (() => boolean) | boolean = true;\r\n  public defaultValuePatched = false;\r\n  public htmlInstance!: HTMLElement;\r\n\r\n  public error: Observable<string | null> = this.statusChanges.pipe(\r\n    startWith(false),\r\n    map(() => CommonHelper.instantError(this, true))\r\n  );\r\n\r\n  public errorObject: Observable<ErrorObject | null> = this.statusChanges.pipe(\r\n    startWith(false),\r\n    map(() => CommonHelper.instantError(this, false))\r\n  );\r\n\r\n  constructor(public formGroupFabric: (value?: any) => ExtendedControls,\r\n              validatorOrOpts?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null,\r\n              asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null,\r\n  ) {\r\n    super([], validatorOrOpts, asyncValidator);\r\n  }\r\n\r\n  public get childrenControls(): Array<ExtendedFormGroup> {\r\n    return this.controls\r\n  };\r\n\r\n  public get(path: Array<string | number> | string): ExtendedFormControl {\r\n    return super.get(path) as ExtendedFormControl;\r\n  }\r\n\r\n  public get canShowError(): boolean {\r\n    return this.invalid && (this.touched || this.dirty);\r\n  }\r\n\r\n  public get isChangedByUser(): boolean {\r\n    if (this.fieldConfig && typeof this.fieldConfig.checkChanges === 'function') {\r\n      return this.fieldConfig.checkChanges(this.value, this.defaultValuePatched);\r\n    }\r\n\r\n    return this.controls.some(control => control.isChangedByUser);\r\n  }\r\n\r\n  public patchValue(value: { [key: string]: any }[], options: { onlySelf?: boolean, emitEvent?: boolean, useAsDefault?: boolean } = {}): void {\r\n    if (!Array.isArray(value)) {\r\n      return;\r\n    }\r\n\r\n    if (options.useAsDefault) {\r\n      this.defaultValuePatched = true;\r\n    }\r\n\r\n    this.removeAllControls()\r\n\r\n    for (let i = this.controls.length; i < value.length; i++) {\r\n      this.addControl(value[i]);\r\n    }\r\n\r\n    value.forEach(((newValue, index) => {\r\n      if (this.at(index)) {\r\n        this.at(index).patchValue(newValue, { ...options, onlySelf: true });\r\n      }\r\n    }));\r\n\r\n    this.updateValueAndValidity(options);\r\n\r\n    this.lastPatchedValue = value;\r\n  }\r\n\r\n  public validate(scrollToError: boolean = false): boolean {\r\n    this.markAllAsTouched();\r\n    this.updateValueAndValidity({ onlySelf: true });\r\n\r\n    if (scrollToError && this.invalid) {\r\n      this.scrollToError();\r\n    }\r\n\r\n    return this.valid;\r\n  }\r\n\r\n  public scrollToError(): void {\r\n    const invalidControl = CommonHelper.getFirstInvalidControl(this);\r\n    if (invalidControl) {\r\n      invalidControl.htmlInstance.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }\r\n\r\n  public resetDefaultValue(): void {\r\n    this.defaultValuePatched = false;\r\n    this.controls.forEach(control => control.resetDefaultValue());\r\n  }\r\n\r\n  public resetToDefaultValue(options: { onlySelf?: boolean, emitEvent?: boolean, useAsDefault?: boolean } = {}): void {\r\n    if (!this.defaultValuePatched) {\r\n      return;\r\n    }\r\n\r\n    if (Array.isArray(this.lastPatchedValue)) {\r\n      this.removeAllControls()\r\n\r\n      for (let i = this.controls.length; i < this.lastPatchedValue.length; i++) {\r\n        this.addControl(this.lastPatchedValue[i]);\r\n      }\r\n\r\n      this.controls.forEach((control, index) => {\r\n        control.patchValue(this.lastPatchedValue[index], { onlySelf: true, useAsDefault: true, ...options })\r\n      });\r\n\r\n      this.updateValueAndValidity({ onlySelf: true });\r\n    }\r\n  }\r\n\r\n  public updateChildrenControls(): void {}\r\n\r\n  public addControl(value?: any): any {\r\n    const control = this.formGroupFabric(value);\r\n\r\n    if (!control) {\r\n      return\r\n    }\r\n\r\n    if (this.disabled) {\r\n      control.disable({ emitEvent: false });\r\n    }\r\n\r\n    this.push(control);\r\n    return control;\r\n  }\r\n\r\n  public removeControl(index: number): void {\r\n    this.removeAt(index)\r\n  }\r\n\r\n  public enableAllControlByKey(key: string): void {\r\n    // @ts-ignore\r\n    this.controls.forEach(control => control.get(key).enable());\r\n  }\r\n\r\n  public removeAllControls(): void {\r\n    while (this.controls.length !== 0) {\r\n      this.removeAt(0);\r\n    }\r\n  }\r\n\r\n  public getRawValue(params = { ignoredFields: false }): any {\r\n    return this.childrenControls.reduce((acc, control) => {\r\n      if (!control.fieldConfig.ignore || params.ignoredFields) {\r\n        acc.push((control as any).getRawValue(params));\r\n      }\r\n      return acc;\r\n    }, []) as any;\r\n  }\r\n}\r\n","import { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { ControlField } from '../base.field';\r\nimport { CommonHelper, RandomHelper } from '../helpers';\r\nimport { ErrorObject } from '../interfaces';\r\n\r\nexport class ExtendedFormControl extends FormControl {\r\n\tpublic readonly id = RandomHelper.NumId;\r\n\tpublic pathFromRoot!: string;\r\n\tpublic fieldConfig!: ControlField;\r\n\tpublic defaultValue: any = null;\r\n\tpublic defaultValuePatched!: boolean;\r\n\tpublic htmlInstance!: HTMLElement;\r\n\r\n\tpublic error: Observable<string | null> = this.statusChanges.pipe(\r\n\t\tstartWith(false),\r\n\t\tmap(() => CommonHelper.instantError(this, true))\r\n\t);\r\n\r\n\tpublic errorObject: Observable<ErrorObject | null> = this.statusChanges.pipe(\r\n\t\tstartWith(false),\r\n\t\tmap(() => CommonHelper.instantError(this, false))\r\n\t);\r\n\r\n\tpublic get canShowError(): boolean {\r\n\t\treturn this.invalid && (this.touched || this.dirty);\r\n\t}\r\n\r\n\tpublic get isChangedByUser(): boolean {\r\n\t\tif (this.fieldConfig && typeof this.fieldConfig.checkChanges === 'function') {\r\n\t\t\treturn this.fieldConfig.checkChanges(this.value, this.defaultValue);\r\n\t\t}\r\n\r\n\t\treturn !(this.defaultValue === this.value || (this.defaultValue === null && this.value === ''));\r\n\t}\r\n\r\n\tpublic patchValue(value: any, options: {\r\n\t\tonlySelf?: boolean,\r\n\t\temitEvent?: boolean,\r\n\t\temitModelToViewChange?: boolean,\r\n\t\temitViewToModelChange?: boolean,\r\n\t\tuseAsDefault?: boolean\r\n\t} = {}): void {\r\n\t\tif (options.useAsDefault) {\r\n\t\t\tthis.defaultValue = value;\r\n\t\t\tthis.defaultValuePatched = true;\r\n\t\t}\r\n\r\n\t\tthis.setValue(value, options);\r\n\t}\r\n\r\n\tpublic resetDefaultValue(): void {\r\n\t\tthis.defaultValue = undefined;\r\n\t\tthis.defaultValuePatched = false;\r\n\t}\r\n\r\n\tpublic resetToDefaultValue(options: { onlySelf?: boolean, emitEvent?: boolean } = {}): void {\r\n\t\tthis.patchValue(this.defaultValue, options);\r\n\t}\r\n\r\n\tpublic getRawValue(params = { ignoredFields: false }): any {\r\n\t\treturn this.value\r\n\t}\r\n}\r\n","import { AbstractControl, AbstractControlOptions, AsyncValidatorFn, ValidatorFn } from '@angular/forms';\r\nimport { ValidationMessages } from './dynamic-form.config';\r\nimport { ExtendedFormArray, ExtendedFormControl, ExtendedFormGroup } from './form-controls';\r\nimport {\r\n  AbstractFieldInterface, ArrayFieldInterface,\r\n  ControlFieldInterface,\r\n  GroupFieldInterface,\r\n  RelatedFieldInterface\r\n} from './interfaces/field-config.interface';\r\n\r\nexport type NewFormControl = new (...params: any) => ExtendedFormControl | ExtendedFormArray | ExtendedFormGroup;\r\n\r\n\r\nexport class AbstractField implements AbstractFieldInterface {\r\n  public formControl: NewFormControl;\r\n  public validatorOrOpts?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null;\r\n  public asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null;\r\n  public key: string;\r\n  public order: number | undefined;\r\n  public internalOrder?: number;\r\n  public initialValue?: any;\r\n  public validationMessages?: ValidationMessages;\r\n  public relatedFields?: RelatedFieldInterface[];\r\n  public class?: string;\r\n  public checkChanges?: (currentValue: any, defaultValue: any) => boolean;\r\n  public autofocus?: boolean;\r\n  public data?: any;\r\n  public ignore?: boolean;\r\n\r\n  constructor(options: AbstractFieldInterface) {\r\n    this.validatorOrOpts = options.validatorOrOpts;\r\n    this.asyncValidator = options.asyncValidator;\r\n    this.key = options.key;\r\n    this.order = options.order;\r\n    this.initialValue = options.initialValue;\r\n    this.validationMessages = options.validationMessages;\r\n    this.relatedFields = options.relatedFields;\r\n    this.class = options.class;\r\n    this.checkChanges = options.checkChanges;\r\n    this.autofocus = options.autofocus;\r\n    this.data = options.data;\r\n    this.formControl = ExtendedFormControl;\r\n    this.ignore = options.ignore;\r\n  }\r\n}\r\n\r\n\r\nexport class ControlField extends AbstractField implements ControlFieldInterface {\r\n  private readonly labelFn?: (form: AbstractControl) => string;\r\n  private readonly labelString?: string;\r\n\r\n  public tooltip?: string;\r\n  public placeholder?: string;\r\n  public minLength?: number;\r\n  public maxLength?: number;\r\n\r\n  constructor(options: ControlFieldInterface) {\r\n    super(options);\r\n\r\n    if (typeof options.label === 'function') {\r\n      this.labelFn = options.label;\r\n    } else {\r\n      this.labelString = options.label;\r\n    }\r\n\r\n    this.tooltip = options.tooltip;\r\n    this.placeholder = options.placeholder;\r\n    this.minLength = options.minLength;\r\n    this.maxLength = options.maxLength;\r\n    this.formControl = ExtendedFormControl;\r\n  }\r\n\r\n  public label(form: AbstractControl): string {\r\n    if (this.labelFn) {\r\n      return this.labelFn(form.value);\r\n    }\r\n\r\n    return this.labelString as any;\r\n  }\r\n}\r\n\r\n\r\nexport class GroupField extends AbstractField implements GroupFieldInterface {\r\n  public configs: Array<AbstractField>;\r\n\r\n  constructor(options: GroupFieldInterface) {\r\n    super(options);\r\n    this.configs = options.configs;\r\n    this.formControl = ExtendedFormGroup;\r\n  }\r\n}\r\n\r\n\r\nexport class ArrayField extends AbstractField implements ArrayFieldInterface {\r\n  public configs: AbstractField | ((value) => AbstractField);\r\n\r\n  constructor(options: ArrayFieldInterface) {\r\n    super(options)\r\n    this.configs = options.configs;\r\n    this.formControl = ExtendedFormArray;\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Directive,\r\n  ElementRef,\r\n  HostBinding,\r\n  Input,\r\n  OnInit,\r\n  TemplateRef,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { AbstractField } from './base.field';\r\nimport { ExtendedControls, ExtendedFormGroup } from './form-controls';\r\nimport { DynamicFormTemplate } from './interfaces';\r\n\r\n\r\n@Directive({\r\n\tselector: '[editableField]'\r\n})\r\nexport class EditableFieldDirective {\r\n}\r\n\r\n\r\n@Component({\r\n\ttemplate: '',\r\n})\r\nexport class BaseFieldComponent implements OnInit, AfterViewInit {\r\n\tpublic readonly self = this;\r\n\r\n\t@Input()\r\n\tpublic readonly fieldConfig!: AbstractField;\r\n\r\n\t@Input()\r\n\tpublic readonly formGroup!: ExtendedFormGroup;\r\n\r\n\t@Input()\r\n\tpublic readonly template?: DynamicFormTemplate = {};\r\n\r\n\t@HostBinding('class')\r\n\tpublic get classList(): string {\r\n\t\treturn this.fieldConfig.class || '';\r\n\t}\r\n\r\n\t@ViewChild(EditableFieldDirective, { read: ElementRef, static: false })\r\n\tpublic readonly editableField?: ElementRef<HTMLElement>;\r\n\r\n\tconstructor(protected readonly elementRef: ElementRef,\r\n\t            protected readonly changeDetectorRef: ChangeDetectorRef\r\n\t) {}\r\n\r\n\tpublic ngOnInit() {\r\n\t\tthis.control.htmlInstance = this.elementRef.nativeElement;\r\n\t}\r\n\r\n\tpublic ngAfterViewInit() {\r\n\t\tif (this.fieldConfig.autofocus && this.editableField instanceof ElementRef) {\r\n\t\t\tthis.editableField.nativeElement.focus();\r\n\t\t\tthis.changeDetectorRef.detectChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get control(): ExtendedControls {\r\n\t\treturn this.formGroup.controls[this.fieldConfig.key];\r\n\t}\r\n\r\n\tpublic get required(): boolean {\r\n\t\treturn this.hasValidator('required');\r\n\t}\r\n\r\n\tpublic hasValidator(key: string): boolean {\r\n\t\tconst control = this.control;\r\n\t\tif (control.validator) {\r\n\t\t\tconst validators = control.validator('' as any);\r\n\t\t\treturn !!(validators && validators.hasOwnProperty(key));\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic get disabled(): boolean {\r\n\t\treturn this.control.disabled;\r\n\t}\r\n\r\n\tpublic get label(): string | null {\r\n\t\t// @ts-ignore\r\n\t\treturn this.fieldConfig.label(this.formGroup);\r\n\t}\r\n\r\n\tpublic get hasTemplateRef(): boolean {\r\n\t\treturn !!this.template && (this.template instanceof TemplateRef || this.template?.ref instanceof TemplateRef)\r\n\t}\r\n\r\n\tpublic get templateRef(): TemplateRef<any> | null {\r\n\t\tif (this.template instanceof TemplateRef) {\r\n\t\t\treturn this.template;\r\n\t\t} else if (this.template?.ref instanceof TemplateRef) {\r\n\t\t\treturn this.template?.ref\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic getChildTemplate(key: string): DynamicFormTemplate | null {\r\n\t\tif (!this.template) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (this.template instanceof TemplateRef) {\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\tif (this.template[key]) {\r\n\t\t\treturn this.template[key] as any;\r\n\t\t}\r\n\r\n\t\treturn (this.template.children as any)[key];\r\n\t}\r\n}\r\n","import { DefaultIterableDiffer } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  AbstractControlOptions,\r\n  AsyncValidatorFn,\r\n  ValidatorFn\r\n} from '@angular/forms';\r\nimport { of } from 'rxjs';\r\nimport { mergeAll, pairwise } from 'rxjs/operators';\r\nimport { AbstractField, ArrayField, ControlField, GroupField } from './base.field';\r\nimport { ExtendedControls, ExtendedFormArray, ExtendedFormControl, ExtendedFormGroup } from './form-controls';\r\nimport { AbstractFieldInterface, RelatedFieldInterface } from './interfaces/field-config.interface';\r\n\r\n\r\nfunction isNullConfig(config: AbstractField): boolean {\r\n  return config === null || config === undefined || !config;\r\n}\r\n\r\nexport function createDynamicForm(\r\n  configList: AbstractField[],\r\n  validatorOrOpts?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null,\r\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null\r\n): ExtendedFormGroup {\r\n  const form = new ExtendedFormGroup({}, validatorOrOpts, asyncValidator);\r\n  form.pathFromRoot = '';\r\n\r\n  configList.forEach((config, index) => {\r\n    if (isNullConfig(config)) {\r\n      return;\r\n    }\r\n\r\n    config.internalOrder = config.hasOwnProperty('order') ? config.order : index;\r\n    const control = debouncer(config, form.pathFromRoot, form);\r\n    addControl(form, control, config, form);\r\n    postProcess(control, config, form);\r\n  });\r\n\r\n  form.updateChildrenControls();\r\n\r\n  return form;\r\n}\r\n\r\nfunction createFormControl(config: AbstractField, parentPath: string): ExtendedFormControl {\r\n  const control = Reflect.construct(config.formControl, [\r\n    config.initialValue,\r\n    config.validatorOrOpts,\r\n    config.asyncValidator,\r\n  ]);\r\n\r\n  control.pathFromRoot = joinPath(parentPath, config.key);\r\n\r\n  return control;\r\n}\r\n\r\n\r\nfunction createFormGroupControl(config: GroupField, parentPath: string, rootForm: ExtendedFormGroup): ExtendedFormGroup {\r\n  const parent = new ExtendedFormGroup({}, config.validatorOrOpts, config.asyncValidator);\r\n  parent.pathFromRoot = joinPath(parentPath, config.key);\r\n\r\n  config.configs.forEach((configChild, index) => {\r\n    if (isNullConfig(configChild)) {\r\n      return;\r\n    }\r\n\r\n    configChild.internalOrder = configChild.hasOwnProperty('order') ? configChild.order : index;\r\n    const control = debouncer(configChild, parent.pathFromRoot, rootForm);\r\n    addControl(parent, control, configChild, rootForm);\r\n    postProcess(control, configChild, rootForm);\r\n  });\r\n\r\n  parent.updateChildrenControls();\r\n\r\n  return parent;\r\n}\r\n\r\nfunction createFormArrayControl(config: ArrayField, parentPath: string, rootForm: ExtendedFormGroup): ExtendedFormArray {\r\n  const parent = new ExtendedFormArray((value?: any) => {\r\n    let fabricConfig;\r\n\r\n    if (typeof config.configs === 'function') {\r\n      fabricConfig = config.configs(value)\r\n    } else {\r\n      fabricConfig = config.configs\r\n    }\r\n\r\n    if (isNullConfig(fabricConfig)) {\r\n      return null;\r\n    }\r\n\r\n    const control = debouncer(fabricConfig, parent.pathFromRoot, rootForm);\r\n    control.fieldConfig = fabricConfig as any;\r\n\r\n    postProcess(control, config, rootForm);\r\n\r\n    return control\r\n  }, config.validatorOrOpts, config.asyncValidator) as any;\r\n\r\n  parent.pathFromRoot = joinPath(parentPath, config.key);\r\n\r\n  return parent;\r\n}\r\n\r\n\r\nfunction debouncer(config: AbstractField, parentPath: string, rootForm: ExtendedFormGroup): ExtendedControls {\r\n  if (config instanceof GroupField) {\r\n    return createFormGroupControl(config as GroupField, parentPath, rootForm);\r\n  } else if (config instanceof ArrayField) {\r\n    return createFormArrayControl(config, parentPath, rootForm);\r\n  }\r\n\r\n  return createFormControl(config, parentPath);\r\n}\r\n\r\n\r\nfunction postProcess(control: AbstractControl & any, config: AbstractField, rootForm: ExtendedFormGroup): void {\r\n  const relatedFields = config.relatedFields;\r\n\r\n  if (!relatedFields) {\r\n    return;\r\n  }\r\n\r\n  const initValueStr = config.initialValue instanceof Object ? config.initialValue.value : config.initialValue;\r\n\r\n  const differ = new DefaultIterableDiffer<RelatedFieldInterface>(trackByItem);\r\n\r\n  of(of(initValueStr), control.valueChanges).pipe(\r\n    mergeAll(),\r\n    pairwise(),\r\n  ).subscribe((controlValues: any[]) => {\r\n    const nextFieldsState = relatedFields.filter(v => controlIsVisible(v, controlValues, control));\r\n    const diff = differ.diff(nextFieldsState);\r\n\r\n    if (!diff) {\r\n      return;\r\n    }\r\n\r\n    diff.forEachRemovedItem(v => {\r\n      let relatedFieldConfig = v.item.configs;\r\n\r\n      if (typeof relatedFieldConfig === 'function') {\r\n        relatedFieldConfig = relatedFieldConfig(controlValues[1], controlValues[0], control);\r\n      }\r\n\r\n      removeControls(relatedFieldConfig, control.parent);\r\n    });\r\n\r\n\r\n    diff.forEachAddedItem(v => {\r\n      let relatedFieldConfig = v.item.configs;\r\n\r\n      if (typeof relatedFieldConfig === 'function') {\r\n        relatedFieldConfig = relatedFieldConfig(controlValues[0], controlValues[1], control);\r\n      }\r\n\r\n      relatedFieldConfig.forEach((childConfig: AbstractField, index) => {\r\n        if (isNullConfig(childConfig)) {\r\n          return;\r\n        }\r\n\r\n        childConfig.internalOrder = childConfig.hasOwnProperty('order') ? childConfig.order : index;\r\n        const childControl = debouncer(childConfig, control.parent.pathFromRoot, rootForm);\r\n\r\n        if (control.parent.lastPatchedValue && control.parent.lastPatchedValue[childConfig.key]) {\r\n          childControl.patchValue(\r\n            control.parent.lastPatchedValue[childConfig.key],\r\n            { emitEvent: false, useAsDefault: control.parent.defaultValuePatched }\r\n          );\r\n        }\r\n\r\n        addControl(control.parent, childControl, childConfig, rootForm);\r\n        postProcess(childControl, childConfig, rootForm);\r\n      });\r\n    });\r\n\r\n    control.parent.updateChildrenControls();\r\n  });\r\n}\r\n\r\n\r\nfunction trackByItem(index: number, item: any): string {\r\n  return item;\r\n}\r\n\r\n\r\nfunction addControl(\r\n  parent: ExtendedFormGroup | ExtendedFormArray,\r\n  control: ExtendedControls,\r\n  config: AbstractField,\r\n  rootForm: ExtendedFormGroup\r\n) {\r\n  control.fieldConfig = config as any;\r\n  parent.addControl(config.key, control, { emitEvent: false });\r\n\r\n  if (rootForm.supposeControls.has(control.pathFromRoot)) {\r\n    // @ts-ignore\r\n    rootForm.supposeControls.get(control.pathFromRoot).next(control);\r\n  }\r\n}\r\n\r\n\r\nfunction removeControls(configs: Array<AbstractFieldInterface>, parent: ExtendedFormGroup): void {\r\n  configs.forEach(config => {\r\n    if (parent.contains(config.key)) {\r\n      parent.removeControl(config.key, { emitEvent: false });\r\n\r\n      if (config.relatedFields) {\r\n        config.relatedFields.forEach((c: any) => removeControls(c.configs, parent));\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction controlIsVisible(config: RelatedFieldInterface, controlValues: any[], control: ExtendedControls): boolean {\r\n  const prevControlValue = controlValues[0];\r\n  const controlValue = controlValues[1];\r\n\r\n  switch (typeof config.checkVisibility) {\r\n    case 'function': {\r\n      // @ts-ignore\r\n      return config.checkVisibility(controlValue, prevControlValue, control);\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n\r\nfunction joinPath(a: string, b: string): string {\r\n  if (a !== '') {\r\n    return `${a}.${b}`;\r\n  }\r\n\r\n  return b;\r\n}\r\n","import {\r\n    ComponentFactoryResolver,\r\n    Directive,\r\n    EmbeddedViewRef,\r\n    Input,\r\n    OnChanges,\r\n    Renderer2,\r\n    SimpleChanges,\r\n    TemplateRef,\r\n    ViewContainerRef,\r\n    ɵstringify,\r\n} from '@angular/core';\r\nimport { BaseFieldComponent } from './base.component';\r\n\r\n@Directive({ selector: '[dynamicFormContent]' })\r\nexport class DynamicFormContentDirective implements OnChanges {\r\n    private context = new DfContentContext();\r\n    private thenTemplateRef: TemplateRef<DfContentContext> | null = null;\r\n    private thenViewRef: EmbeddedViewRef<any> | null = null;\r\n    private customViewRef: EmbeddedViewRef<any> | null = null;\r\n\r\n    constructor(private readonly viewContainer: ViewContainerRef,\r\n                private readonly componentFactoryResolver: ComponentFactoryResolver,\r\n                private readonly renderer2: Renderer2,\r\n                private readonly templateRef: TemplateRef<DfContentContext>\r\n    ) {\r\n        this.thenTemplateRef = templateRef;\r\n    }\r\n\r\n    public ngOnChanges(changes: SimpleChanges): void {\r\n        if (this.context.$implicit.hasTemplateRef && !this.customViewRef) {\r\n            this.clearViewExclude(this.customViewRef);\r\n            this.customViewRef = this.viewContainer.createEmbeddedView(\r\n                this.context.$implicit.templateRef as any,\r\n                { component: this.context.$implicit, formTemplate: this.thenTemplateRef }\r\n            );\r\n        } else if (this.thenTemplateRef && !this.thenViewRef) {\r\n            this.clearViewExclude(this.thenTemplateRef);\r\n            this.thenViewRef = this.viewContainer.createEmbeddedView(this.thenTemplateRef, this.context);\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    public set dynamicFormContent(condition: BaseFieldComponent) {\r\n        this.context.$implicit = condition;\r\n    }\r\n\r\n    @Input()\r\n    public set dynamicFormContentThen(templateRef: TemplateRef<DfContentContext> | null) {\r\n        assertTemplate('dynamicFormContentThen', templateRef);\r\n        this.thenTemplateRef = templateRef;\r\n        this.thenViewRef = null; // clear previous view if any.\r\n    }\r\n\r\n    private clearViewExclude(excludeView: any): void {\r\n        this.viewContainer.clear();\r\n\r\n        if (excludeView !== this.thenViewRef) {\r\n            this.thenViewRef = null;\r\n        }\r\n\r\n        if (excludeView !== this.customViewRef) {\r\n            this.customViewRef = null;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function assertTemplate(property: string, templateRef: TemplateRef<any> | null): void {\r\n    const isTemplateRefOrNull = !!(!templateRef || templateRef.createEmbeddedView);\r\n    if (!isTemplateRefOrNull) {\r\n        throw new Error(`${property} must be a TemplateRef, but received '${ɵstringify(templateRef)}'.`);\r\n    }\r\n}\r\n\r\nexport class DfContentContext {\r\n    public $implicit!: BaseFieldComponent;\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const DYNAMIC_FORM_CONFIG: InjectionToken<string> = new InjectionToken('dynamicFormConfig');\r\nexport const DYNAMIC_FORM_CONFIG_MAP: InjectionToken<string> = new InjectionToken('dynamicFormConfigMap');\r\nexport const DYNAMIC_FORM_VALIDATION_MESSAGES: InjectionToken<string> = new InjectionToken('dynamicFormValidationMessages');\r\n","import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  Inject,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { AbstractField } from './base.field';\r\nimport { NewComponent } from './dynamic-form.config';\r\nimport { ExtendedFormArray, ExtendedFormGroup } from './form-controls';\r\nimport { DYNAMIC_FORM_CONFIG_MAP } from './injectors';\r\nimport { DynamicFormTemplate } from './interfaces';\r\n\r\n\r\n@Directive({\r\n  selector: '[dynamicField]'\r\n})\r\nexport class DynamicFieldDirective implements OnChanges {\r\n  public component!: ComponentRef<any>;\r\n\r\n  @Input()\r\n  public fieldConfig!: AbstractField;\r\n\r\n  @Input()\r\n  public formGroup!: ExtendedFormGroup | ExtendedFormArray;\r\n\r\n  @Input()\r\n  public template!: DynamicFormTemplate;\r\n\r\n  @Input()\r\n  public rowIndex!: number;\r\n\r\n  constructor(private readonly viewContainerRef: ViewContainerRef,\r\n              private readonly componentFactoryResolver: ComponentFactoryResolver,\r\n              @Inject(DYNAMIC_FORM_CONFIG_MAP)\r\n              private readonly componentsByConfig: Map<any, NewComponent>,\r\n  ) {\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.fieldConfig && changes.fieldConfig.currentValue) {\r\n      const constructor = (this.fieldConfig as any).constructor;\r\n      if (!this.componentsByConfig.get(constructor)) {\r\n        throw new Error(\r\n          `Trying to use an unsupported type (${constructor}).`\r\n        );\r\n      }\r\n\r\n      const component = this.componentFactoryResolver.resolveComponentFactory(\r\n        this.componentsByConfig.get(constructor) as any\r\n      );\r\n\r\n      this.component = this.viewContainerRef.createComponent(component);\r\n      this.setComponentProps();\r\n    }\r\n  }\r\n\r\n  public setComponentProps() {\r\n    this.component.instance.fieldConfig = this.fieldConfig;\r\n    this.component.instance.formGroup = this.formGroup;\r\n    this.component.instance.template = this.template;\r\n    this.component.instance.rowIndex = this.rowIndex;\r\n  }\r\n}\r\n","import { Component, Inject, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { NewComponent, ValidationMessagesFn } from './dynamic-form.config';\r\nimport { ExtendedControls, ExtendedFormGroup } from './form-controls';\r\nimport { DYNAMIC_FORM_VALIDATION_MESSAGES } from './injectors';\r\nimport { DynamicFormTemplate } from './interfaces';\r\n\r\n@Component({\r\n  selector: 'dynamic-form',\r\n  templateUrl: './dynamic-form.component.html',\r\n  styleUrls: ['./dynamic-form.component.scss'],\r\n})\r\nexport class DynamicFormComponent implements OnChanges {\r\n  public readonly componentsByConfig = new Map<any, NewComponent>();\r\n\r\n  @Input()\r\n  public form!: ExtendedFormGroup;\r\n\r\n  @Input()\r\n  public templates: DynamicFormTemplate = {};\r\n\r\n  constructor(@Inject(DYNAMIC_FORM_VALIDATION_MESSAGES)\r\n              private readonly validationMessages: ValidationMessagesFn\r\n  ) {\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.form && changes.form.currentValue) {\r\n      const root = changes.form.currentValue.root as ExtendedFormGroup;\r\n      root.defaultValidationMessages = this.validationMessages();\r\n    }\r\n  }\r\n\r\n  public getTemplate(key: string): any {\r\n    return this.templates[key];\r\n  }\r\n\r\n  public trackByKeyFn(index: number, control: ExtendedControls) {\r\n    return control.id;\r\n  }\r\n}\r\n","<form novalidate [formGroup]=\"form\">\r\n    <ng-content select=\"[formHeader]\"></ng-content>\r\n\r\n    <ng-container *ngFor=\"let control of form.childrenControls; trackBy: trackByKeyFn\"\r\n                  dynamicField\r\n                  [fieldConfig]=\"control.fieldConfig\"\r\n                  [formGroup]=\"form\"\r\n                  [template]=\"getTemplate(control.fieldConfig.key)\"\r\n    ></ng-container>\r\n\r\n    <ng-content select=\"[formFooter]\"></ng-content>\r\n</form>\r\n\r\n","import { CommonModule } from '@angular/common';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BaseFieldComponent, EditableFieldDirective } from './base.component';\r\nimport { DynamicFieldDirective } from './dynamic-field.directive';\r\nimport { DynamicFormComponent } from './dynamic-form.component';\r\nimport { DynamicFormConfig, ValidationMessagesFn } from './dynamic-form.config';\r\nimport { DynamicFormContentDirective } from './dynamic-from-content.directive';\r\nimport { DYNAMIC_FORM_CONFIG, DYNAMIC_FORM_CONFIG_MAP, DYNAMIC_FORM_VALIDATION_MESSAGES } from './injectors';\r\n\r\n\r\n@NgModule({\r\n  declarations: [DynamicFormComponent, DynamicFieldDirective, BaseFieldComponent, DynamicFormContentDirective, EditableFieldDirective],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  exports: [DynamicFormComponent, BaseFieldComponent, DynamicFieldDirective, DynamicFormContentDirective, EditableFieldDirective]\r\n})\r\nexport class DynamicFormModule {\r\n\r\n  public static config(\r\n    dynamicFormConfig: DynamicFormConfig,\r\n    validationMessages?: ValidationMessagesFn\r\n  ): ModuleWithProviders<DynamicFormModule> {\r\n    const dynamicFormConfigMap = new Map(dynamicFormConfig.map(v => ([v.config, v.component])));\r\n    return {\r\n      ngModule: DynamicFormModule,\r\n      providers: [\r\n        { provide: DYNAMIC_FORM_CONFIG, useValue: dynamicFormConfig },\r\n        { provide: DYNAMIC_FORM_CONFIG_MAP, useValue: dynamicFormConfigMap },\r\n        { provide: DYNAMIC_FORM_VALIDATION_MESSAGES, useValue: validationMessages || {} },\r\n      ]\r\n    };\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of dynamic-form\r\n */\r\n\r\nexport * from './lib/form-controls';\r\nexport * from './lib/interfaces';\r\nexport * from './lib/base.field';\r\nexport * from './lib/base.component';\r\nexport * from './lib/common';\r\nexport * from './lib/dynamic-from-content.directive';\r\nexport * from './lib/dynamic-field.directive';\r\nexport * from './lib/dynamic-form.component';\r\nexport * from './lib/dynamic-form.module';\r\nexport * from './lib/dynamic-form.config';\r\nexport * from './lib/dynamic-form.module';\r\nexport * from './lib/injectors'","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i3.DynamicFieldDirective"],"mappings":"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"}